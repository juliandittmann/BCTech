// KQL samples - Per-tenant extension (PTE) upload validation events

// Available in environment (only online) telemetry from September 2023

// In the online version of Business Central, when a user/administrator uploads a per-tenant extension 
// to an environment from the Extension Management page, we proactively validate it against the environment.
// In the KQL sample code below, this is called a "PTE submission validation request".

// With this telemetry, partners can monitor these attempts for customers 
// and setup alerts on failures so that they know up-front which customers will need help.


// The PTE submission validation flow is as follows:
//
// PTE submission validation request started (LC0200). This includes the main extension to be validated and a list of extensions it depends on.
// For each extension (main + dependent extensions)
//         Extension validation started (LC0204)
//
//         Either 
//                 Extension validation completed successfully (LC0205)
//         or
//                 Validation diagnostic reported (LC0210)
//                 Extension validation completed with failures (LC0206)
// Either 
//         PTE submission validation request completed successfully (LC0202)
// or
//         PTE submission validation request completed with failures (LC0203)


// PTE validation started: request <submission id>
traces 
| where customDimensions has "LC0200"
| where customDimensions.eventId == "LC0200"
| where timestamp > ago(30d) // adjust as needed
| extend mainExtension = parse_json(tostring( customDimensions.mainExtension ))
| project timestamp
// in which environment is the extension being validated
, aadTenantId = case(
  isnotempty(customDimensions.aadTenantId), customDimensions.aadTenantId  
, isnotempty(customDimensions.environmentId), customDimensions.environmentId
, 'Unknown'
)
, environmentName = customDimensions.environmentName
, dependentExtensions = customDimensions.dependentExtensions
// which extension/app is being validated
, mainExtensionId = mainExtension.Id
, mainExtensionPublisher = mainExtension.Publisher
, mainExtensionVersion = mainExtension.Version 
, mainExtensionName = mainExtension.Name 
// validation info
, submissionOperationId = customDimensions.submissionOperationId 


// Extension validation started: extension <extension name> version <extension version> by <extension publisher> (<extension id>)
traces 
| where customDimensions has "LC0204"
| where customDimensions.eventId == "LC0204"
| where timestamp > ago(30d) // adjust as needed
| project timestamp
// in which environment is the extension being validated
, aadTenantId = case(
  isnotempty(customDimensions.aadTenantId), customDimensions.aadTenantId  
, isnotempty(customDimensions.environmentId), customDimensions.environmentId
, 'Unknown'
)
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType // need this dimension
// which extension/app is being validated
, extensionId = customDimensions.extensionId
, extensionPublisher = customDimensions.extensionPublisher
, extensionVersion = customDimensions.extensionVersion
, extensionName = customDimensions.extensionName
// validation info
, submissionOperationId = customDimensions.submissionOperationId 


// Extension validation completed successfully: extension <extension name> version <extension version> by <extension publisher> (<extension id>)
traces 
| where customDimensions has "LC0205"
| where customDimensions.eventId == "LC0205"
| where timestamp > ago(30d) // adjust as needed
| project timestamp
// in which environment is the extension being validated
, aadTenantId = case(
  isnotempty(customDimensions.aadTenantId), customDimensions.aadTenantId  
, isnotempty(customDimensions.environmentId), customDimensions.environmentId
, 'Unknown'
)
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType // need this dimension
// which extension/app is being validated
, extensionId = customDimensions.extensionId
, extensionPublisher = customDimensions.extensionPublisher
, extensionVersion = customDimensions.extensionVersion
, extensionName = customDimensions.extensionName
// validation info
, submissionOperationId = customDimensions.submissionOperationId 


// Validation diagnostic reported: extension <extension name> version <extension version> by <extension publisher> (<extension id>)
traces 
| where customDimensions has "LC0210"
| where customDimensions.eventId == "LC0210"
| where timestamp > ago(30d) // adjust as needed
| project timestamp
// in which environment is the extension being validated
, aadTenantId = case(
  isnotempty(customDimensions.aadTenantId), customDimensions.aadTenantId  
, isnotempty(customDimensions.environmentId), customDimensions.environmentId
, 'Unknown'
)
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType 
// which extension/app is being validated
, extensionId = customDimensions.extensionId
, extensionPublisher = customDimensions.extensionPublisher
, extensionVersion = customDimensions.extensionVersion
, extensionName = customDimensions.extensionName
// validation info
, submissionOperationId = customDimensions.submissionOperationId 
, diagnosticSourceLocation = customDimensions.diagnosticSourceLocation
, diagnosticMessage = customDimensions.diagnosticMessage
, diagnosticSourcePath = customDimensions.diagnosticSourcePath
, diagnosticCode = customDimensions.diagnosticCode
, diagnosticSeverity = customDimensions.diagnosticSeverity


// Extension validation completed with failures: extension <extension name> version <extension version> by <extension publisher> (<extension id>)
traces 
| where customDimensions has "LC0206"
| where customDimensions.eventId == "LC0206"
| where timestamp > ago(30d) // adjust as needed
| project timestamp
// in which environment is the extension being validated
, aadTenantId = case(
  isnotempty(customDimensions.aadTenantId), customDimensions.aadTenantId  
, isnotempty(customDimensions.environmentId), customDimensions.environmentId
, 'Unknown'
)
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType
// which extension/app is being validated
, extensionId = customDimensions.extensionId
, extensionPublisher = customDimensions.extensionPublisher
, extensionVersion = customDimensions.extensionVersion
, extensionName = customDimensions.extensionName
// validation info
, submissionOperationId = customDimensions.submissionOperationId 
, failureReason = customDimensions.failureReason


// PTE submission validation request completed successfully: request <submission id>
traces 
| where customDimensions has "LC0202"
| where customDimensions.eventId == "LC0202"
| where timestamp > ago(30d) // adjust as needed
| extend mainExtension = parse_json(tostring( customDimensions.mainExtension ))
| project timestamp
// in which environment is the extension being validated
, aadTenantId = case(
  isnotempty(customDimensions.aadTenantId), customDimensions.aadTenantId  
, isnotempty(customDimensions.environmentId), customDimensions.environmentId
, 'Unknown'
)
, environmentName = customDimensions.environmentName
// which extension/app is being validated
, mainExtensionId = mainExtension.Id
, mainExtensionPublisher = mainExtension.Publisher
, mainExtensionVersion = mainExtension.Version 
, mainExtensionName = mainExtension.Name 
, dependentExtensions = customDimensions.dependentExtensions
// validation info
, submissionOperationId = customDimensions.submissionOperationId 


// PTE submission validation request completed with failures: request <submission id>	
traces 
| where customDimensions has "LC0203"
| where customDimensions.eventId == "LC0203"
| where timestamp > ago(30d) // adjust as needed
| extend mainExtension = parse_json(tostring( customDimensions.mainExtension ))
| project timestamp
// in which environment is the extension being validated
, aadTenantId = case(
  isnotempty(customDimensions.aadTenantId), customDimensions.aadTenantId  
, isnotempty(customDimensions.environmentId), customDimensions.environmentId
, 'Unknown'
)
, environmentName = customDimensions.environmentName
// which extension/app is being validated
, mainExtensionId = mainExtension.Id
, mainExtensionPublisher = mainExtension.Publisher
, mainExtensionVersion = mainExtension.Version 
, mainExtensionName = mainExtension.Name 
, dependentExtensions = customDimensions.dependentExtensions
// validation info
, submissionOperationId = customDimensions.submissionOperationId  
, failureReason = customDimensions.failureReason